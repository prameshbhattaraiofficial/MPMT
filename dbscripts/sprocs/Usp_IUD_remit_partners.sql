--- Created By		: Rohit poudel
--- Created Date	: Auto Generated By AutoGenerator 
--- Description		: Procedure For Auto Create Insert Proc 


CREATE OR ALTER Proc [dbo].[Usp_IUD_remit_partners] --'I',0,'123456','yash1','ram',0,'9842032671','0','yash@gmail.com','0','yash',1,'biratnage','yash adhikar','test','test','122'(	@Event char(2) = 'I', 	@Id Int = 0, 	@PartnerCode varchar(20) ='',	@FirstName nvarchar(100),	@SurName nvarchar(100),	@IsSurNamePresent bit = 1,	@MobileNumber nvarchar(30),	@MobileConfirmed bit = 0,	@Email nvarchar(200),	@EmailConfirmed bit = 0,	@Post nvarchar(100) = '',	@GenderId int = 1,
	@BusinessNumber nvarchar(100) ='',
	@FinancialTransactionRegNo nvarchar(100) = '',
	@RemittancRegNumber nvarchar(100) = '',
	@LicenseNumber nvarchar(100) = '',
	@ZipCode nvarchar(20) = '',
	@OrgState nvarchar(100) ='',
	@IsFirstNamePresent bit = 0,	@Address nvarchar(500) = '',	@UserName nvarchar(100),	@PasswordHash nvarchar(512),	@PasswordSalt nvarchar(Max),	@AccessCodeHash nvarchar(512) = '',	@AccessCodeSalt nvarchar(Max) = '',	@MPINHash nvarchar(512)  = '',	@MPINSalt nvarchar(Max)  = '',	@ChargeCategoryId int  = 0,	--@FundTypeId int  = 0,	@FundType varchar(50) = '',		----FUNDTYPE=>('PREFUNDING','CONSUMPTION')	@CreditUptoLimitPerc decimal(10,2)  = 0,	@CreditSendTxnLimit decimal(18,2) = 0,	@CashPayoutSendTxnLimit decimal(18,2) = 0,	@WalletSendTxnLimit decimal(18,2) = 0,	@BankSendTxnLimit decimal(18,2) = 0,	@NotificationBalanceLimit decimal(18,2) = 0,	@TransactionApproval bit = 0,	@OrganizationName nvarchar(256) = '',	@OrgEmail nvarchar(150)= '',	@OrgEmailConfirmed bit = 0,	@CountryCode varchar(10) = '',	@Callingcode  varchar(10) = '',	@City nvarchar(150)= '',	@FullAddress nvarchar(300)= '',	@GMTTimeZone nvarchar(50)= '',	@RegistrationNumber nvarchar(150)= '',	@SourceCurrency nvarchar(3)= '',	@Website nvarchar(200)= '',	@IpAddress nvarchar(50)= '',	@CompanyLogoImgPath nvarchar(512)= '',	@DocumentTypeId int = 0,	@DocumentNumber nvarchar(150) = '',	@IdFrontImgPath nvarchar(512) = '',	@IdBackImgPath nvarchar(512) = '',	@ExpiryDate datetime2 = '',	@AddressProofTypeId int = 0,	@AddressProofImgPath nvarchar(512) = '',	@LastIpAddress nvarchar(100)= '',	@DeviceId nvarchar(Max) = '',	@IsActive bit = 0,	@IsDeleted bit = 0,	@IsBlocked bit = 0,	@FailedLoginAttempt int = 0,	@TemporaryLockedTillUtcDate datetime2 = '',	@LastLoginDateUtc datetime2 = '',	@LastActivityDateUtc datetime2 = '',	@KycStatusCode varchar(20) = '',	@Is2FAAuthenticated bit = 0,	@AccountSecretKey nvarchar(512) = '',	@LicensedocImgPath nvarchar(512) = '',	@Maker bit = 0,	@Checker bit = 0,	@CreatedById int = 0,	@CreatedByName varchar(100)= '',	@CreatedDate datetime2 = '',	@UpdatedById int = 0,	@UpdatedByName varchar(100)= 0,	@UpdatedDate datetime2 = '',	@Directors PartnersDirectorsType READONLY,	@IdentityVal INT = NULL OUTPUT,
    @StatusCode INT = NULL OUTPUT,
	@MsgType VARCHAR(10) = NULL OUTPUT,
	@MsgText VARCHAR(200) = NULL OUTPUT 
	)
As
DECLARE @ErrorNumber INT 
DECLARE @ErrorMessage NVARCHAR(4000)
DECLARE @ErrorSeverity INT
DECLARE @ErrorState INT
DECLARE @ErrorProcedure NVARCHAR(256)
DECLARE @ErrorLine INT

SET @StatusCode = 400
	SET @MsgType = 'Error'
	SET @MsgText = 'Bad Request'
	SET @IdentityVal = 0

	SET @UserName=TRIM(@UserName)
	declare @FundTypeId int;


 IF @Event='I'
 BEGIN
 declare @sRandom nvarchar(100);
	EXEC usp_generate_random_numeric_string 10, @sRandom output
	--select @sRandom
SET @PartnerCode=('REM'+(select @sRandom))
 END


 IF NOT EXISTS(SELECT 1 FROM tbl_service_charge_category WHERE Id = @ChargeCategoryId )
  BEGIN
	SET @MsgText = 'Invalid Category Type Id'    
    RETURN; 
  END

  
	IF NOT EXISTS(SELECT 1 FROM tbl_fund_type WHERE FundTypeCode = @FundType AND @FundType IN ('PREFUNDING','CONSUMPTION') AND IsActive=1 and ISNULL(IsDeleted,0)=0 )
	BEGIN
	SET @MsgText = 'Invalid FundType'    
	RETURN; 
	END
	SET @FundTypeId = (SELECT Id FROM dbo.tbl_fund_type with(nolock) where FundTypeCode=@FundType and IsActive=1 and ISNULL(IsDeleted,0) = 0)

	IF NOT EXISTS(SELECT 1 FROM tbl_fund_type WHERE Id = @FundTypeId )
	BEGIN
	SET @MsgText = 'Invalid FundType Id'    
	RETURN; 
	END
  
   IF NOT EXISTS(SELECT 1 FROM tbl_country WHERE CountryCode = @CountryCode )
  BEGIN
	SET @MsgText = 'Invalid Countrycode Id'    
    RETURN; 
  END
   IF NOT EXISTS(SELECT 1 FROM tbl_document_type WHERE Id = @DocumentTypeId )
  BEGIN
	SET @MsgText = 'Invalid DocumentType Id'    
    RETURN; 
  END
   IF NOT EXISTS(SELECT 1 FROM tbl_gender WHERE Id = @GenderId )
  BEGIN
	SET @MsgText = 'Invalid Gender Id'    
    RETURN; 
  END


If @Event = 'I'  --for Insert
Begin 
	--------------------------------------------- Validation Begin ------------------------------------------------------
		IF (ISNULL(@PartnerCode, '') = '')
	BEGIN
		SET @StatusCode = 400
		SET @MsgText = 'PartnerCode is required'
		RETURN
	END

	IF (ISNULL(@UserName, '') = '')
	BEGIN
		SET @StatusCode = 400
		SET @MsgText = 'UserName is required'
		RETURN
	END
	IF(EXISTS (Select Id from  tbl_remit_partners where UserName=@UserName ))
	BEGIN
		SET @StatusCode = 400
		SET @MsgText = 'UserName Already Exists'
		RETURN
	END
		IF(EXISTS (Select Id from  tbl_remit_partners where PartnerCode=@PartnerCode ))
	BEGIN
		SET @StatusCode = 400
		SET @MsgText = 'PartnerCode Already Exists'
		RETURN
	END
   --------------------------------------------- Validation End  -------------------------------------------------------
    BEGIN TRY
	--------------------------------------------- Validation End  -------------------------------------------------------
	INSERT INTO [dbo].[tbl_remit_partners]
           ([PartnerCode]
           ,[FirstName]
           ,[SurName]
           ,[IsSurNamePresent]
           ,[MobileNumber]
           ,[MobileConfirmed]
           ,[Email]
           ,[EmailConfirmed]
           ,[Post]
           ,[GenderId]
           ,[Address]
           ,[UserName]
           ,[PasswordHash]
           ,[PasswordSalt]
           ,[AccessCodeHash]
           ,[AccessCodeSalt]
           ,[MPINHash]
           ,[MPINSalt]
           ,[ChargeCategoryId]
           ,[FundTypeId]
           ,[CreditUptoLimitPerc]
           ,[CreditSendTxnLimit]
           ,[CashPayoutSendTxnLimit]
           ,[WalletSendTxnLimit]
           ,[BankSendTxnLimit]
           ,[NotificationBalanceLimit]
           ,[TransactionApproval]
           ,[OrganizationName]
           ,[OrgEmail]
           ,[OrgEmailConfirmed]
           ,[CountryCode]
           ,[City]
           ,[FullAddress]
           ,[GMTTimeZone]
           ,[RegistrationNumber]
           ,[SourceCurrency]
           ,[Website]
           ,[IpAddress]
           ,[CompanyLogoImgPath]
           ,[DocumentTypeId]
           ,[DocumentNumber]
           ,[IdFrontImgPath]
           ,[IdBackImgPath]
           ,[ExpiryDate]
           ,[AddressProofTypeId]
           ,[AddressProofImgPath]
           ,[LastIpAddress]
           ,[DeviceId]
           ,[IsActive]
           ,[IsDeleted]
           ,[IsBlocked]
           ,[FailedLoginAttempt]
           ,[TemporaryLockedTillUtcDate]
           ,[LastLoginDateUtc]
           ,[LastActivityDateUtc]
           ,[KycStatusCode]
           ,[Is2FAAuthenticated]
		    ,[AccountSecretKey]
           ,[LicensedocImgPath]
		   ,[BusinessNumber]
		   ,[FinancialTransactionRegNo]
			,[RemittancRegNumber]
			,[LicenseNumber]
			,[ZipCode]
			,[OrgState]
			,[IsFirstNamePresent]
			,[Callingcode]
          
           ,[Maker]
           ,[Checker]
           ,[CreatedById]
           ,[CreatedByName]
           ,[CreatedDate]
           ,[UpdatedById]
           ,[UpdatedByName]
           ,[UpdatedDate])
     VALUES 	(			@PartnerCode,		@FirstName,		@SurName,		@IsSurNamePresent,		@MobileNumber,		@MobileConfirmed,		@Email,		@EmailConfirmed,		@Post,		@GenderId,		@Address,		@UserName,		@PasswordHash,		@PasswordSalt,		@AccessCodeHash,		@AccessCodeSalt,		@MPINHash,		@MPINSalt,		@ChargeCategoryId,		@FundTypeId,		@CreditUptoLimitPerc,		@CreditSendTxnLimit,		@CashPayoutSendTxnLimit,		@WalletSendTxnLimit,		@BankSendTxnLimit,		@NotificationBalanceLimit,		@TransactionApproval,		@OrganizationName,		@OrgEmail,		@OrgEmailConfirmed,		@CountryCode,		@City,		@FullAddress,		@GMTTimeZone,		@RegistrationNumber,		@SourceCurrency,		@Website,		@IpAddress,		@CompanyLogoImgPath,		@DocumentTypeId,		@DocumentNumber,		@IdFrontImgPath,		@IdBackImgPath,		@ExpiryDate,		@AddressProofTypeId,		@AddressProofImgPath,		@LastIpAddress,		@DeviceId,		@IsActive,		@IsDeleted,		@IsBlocked,		@FailedLoginAttempt,		@TemporaryLockedTillUtcDate,		@LastLoginDateUtc,		@LastActivityDateUtc,		@KycStatusCode,		@Is2FAAuthenticated,		@AccountSecretKey,		@LicensedocImgPath,		@BusinessNumber,
		@FinancialTransactionRegNo,
		@RemittancRegNumber,
		@LicenseNumber,
		@ZipCode,
		@OrgState,
		@IsFirstNamePresent,		@Callingcode,		@Maker,		@Checker,		@CreatedById,		@CreatedByName,		GETUTCDATE(),		NULL,		NULL,		NULL	) 
	Set @IdentityVal = @@IDENTITY
	
	INSERT INTO [dbo].[tbl_partner_directors] (DirectorId,PartnerCode, FirstName, ContactNumber, Email)
		SELECT  NEWID(), @PartnerCode, FirstName, ContactNumber, Email FROM @Directors;

	
	Set @MsgText = 'Record Inserted Successfully !'	
	Set @StatusCode = 200
	SET @MsgType = 'Sucess'
	
	END TRY
	BEGIN CATCH
		SET @ErrorNumber  = ERROR_NUMBER();
        SET @ErrorMessage  = ERROR_MESSAGE();
        SET @ErrorSeverity  = ERROR_SEVERITY();
        SET @ErrorState  = ERROR_STATE();
        SET @ErrorProcedure  = ERROR_PROCEDURE();
        SET @ErrorLine  = ERROR_LINE();

        EXEC [dbo].[usp_logdberror] @ErrorNumber, @ErrorMessage, @ErrorSeverity, @ErrorState, @ErrorProcedure, @ErrorLine;
		
		-- Re-throw the error to the calling application
        THROW;
	END CATCH
End 
Else
If @Event = 'U'    --- Update
Begin
	--------------------------------------------- Validation Begin ------------------------------------------------------
		IF (ISNULL(@Id, 0) = 0)
	BEGIN
		SET @StatusCode = 400
		SET @MsgText = 'Id is required'
		RETURN
	END
		IF (ISNULL(@PartnerCode, '') = '')
	BEGIN
		SET @StatusCode = 400
		SET @MsgText = 'Partner Code is required'
		RETURN
	END
	IF (ISNULL(@UserName, '') = '')
	BEGIN
		SET @StatusCode = 400
		SET @MsgText = 'User Name is required'
		RETURN
	END
   --------------------------------------------- Validation End  -------------------------------------------------------
   BEGIN TRY
	Update dbo.tbl_remit_partners Set 		--[PartnerCode] = @PartnerCode,		[FirstName] = @FirstName,		[SurName] = @SurName,		[IsSurNamePresent] = @IsSurNamePresent,		[MobileNumber] = @MobileNumber,		[MobileConfirmed] = @MobileConfirmed,		[Email] = @Email,		[EmailConfirmed] = @EmailConfirmed,		[Post] = @Post,		[GenderId] = @GenderId,		[Address] = @Address,		[UserName] = @UserName,		[PasswordHash] = @PasswordHash,		[PasswordSalt] = @PasswordSalt,		[AccessCodeHash] = @AccessCodeHash,		[AccessCodeSalt] = @AccessCodeSalt,		[MPINHash] = @MPINHash,		[MPINSalt] = @MPINSalt,		[ChargeCategoryId] = @ChargeCategoryId,		[FundTypeId] = @FundTypeId,		[CreditUptoLimitPerc] = @CreditUptoLimitPerc,		[CreditSendTxnLimit] = @CreditSendTxnLimit,		[CashPayoutSendTxnLimit] = @CashPayoutSendTxnLimit,		[WalletSendTxnLimit] = @WalletSendTxnLimit,		[BankSendTxnLimit] = @BankSendTxnLimit,		[NotificationBalanceLimit] = @NotificationBalanceLimit,		[TransactionApproval] = @TransactionApproval,		[OrganizationName] = @OrganizationName,		[OrgEmail] = @OrgEmail,		[OrgEmailConfirmed] = @OrgEmailConfirmed,		[CountryCode] = @CountryCode,		[City] = @City,		[FullAddress] = @FullAddress,		[GMTTimeZone] = @GMTTimeZone,		[RegistrationNumber] = @RegistrationNumber,		[SourceCurrency] = @SourceCurrency,		[Website] = @Website,		[IpAddress] = @IpAddress,		[CompanyLogoImgPath] = @CompanyLogoImgPath,		[DocumentTypeId] = @DocumentTypeId,		[DocumentNumber] = @DocumentNumber,		[IdFrontImgPath] = @IdFrontImgPath,		[IdBackImgPath] = @IdBackImgPath,		[ExpiryDate] = @ExpiryDate,		[AddressProofTypeId] = @AddressProofTypeId,		[AddressProofImgPath] = @AddressProofImgPath,		[LastIpAddress] = @LastIpAddress,		[DeviceId] = @DeviceId,		[IsActive] = @IsActive,			[IsBlocked] = @IsBlocked,		[FailedLoginAttempt] = @FailedLoginAttempt,		[TemporaryLockedTillUtcDate] = @TemporaryLockedTillUtcDate,		[LastLoginDateUtc] = @LastLoginDateUtc,		[LastActivityDateUtc] = @LastActivityDateUtc,		[KycStatusCode] = @KycStatusCode,		[Is2FAAuthenticated] = @Is2FAAuthenticated,		[AccountSecretKey] = @AccountSecretKey,		[LicensedocImgPath] = @LicensedocImgPath,		[BusinessNumber] = @BusinessNumber,
		[FinancialTransactionRegNo] = @FinancialTransactionRegNo,
		[RemittancRegNumber] = @RemittancRegNumber,
		[LicenseNumber] = @LicenseNumber,
		[ZipCode] = @ZipCode,
		[OrgState] = @OrgState,
		[IsFirstNamePresent] = @IsFirstNamePresent,		[Callingcode] = @Callingcode,		[Maker] = @Maker,		[Checker] = @Checker,				[UpdatedById] = @UpdatedById,		[UpdatedByName] = @UpdatedByName,		[UpdatedDate] = GETUTCDATE()	 Where [Id] = @Id	set @PartnerCode = (select PartnerCode from dbo.tbl_remit_partners where [Id] = @Id);	if((ISNULL(@PartnerCode, '')  <> '' ))	begin		DELETE FROM [dbo].[tbl_partner_directors] WHERE PartnerCode = @PartnerCode;
		INSERT INTO [dbo].[tbl_partner_directors](DirectorId,PartnerCode,	FirstName,	ContactNumber,	Email)
		SELECT NEWID(), @PartnerCode, FirstName, ContactNumber, Email FROM @Directors;	end	Set @IdentityVal = @Id 	Set @MsgText = 'Record Updated Successfully !'	Set @StatusCode = 200
	SET @MsgType = 'Sucess'
	END TRY
	BEGIN CATCH
		SET @ErrorNumber  = ERROR_NUMBER();
        SET @ErrorMessage  = ERROR_MESSAGE();
        SET @ErrorSeverity  = ERROR_SEVERITY();
        SET @ErrorState  = ERROR_STATE();
        SET @ErrorProcedure  = ERROR_PROCEDURE();
        SET @ErrorLine  = ERROR_LINE();

        EXEC [dbo].[usp_logdberror] @ErrorNumber, @ErrorMessage, @ErrorSeverity, @ErrorState, @ErrorProcedure, @ErrorLine;
		
		-- Re-throw the error to the calling application
        THROW;
	END CATCH
	End 
Else
If @Event = 'D'   -- For Delete 
Begin 

--------------------------------------------- Validation Begin ------------------------------------------------------
IF (ISNULL(@Id, 0) = 0)
	BEGIN
		SET @StatusCode = 400
		SET @MsgText = 'Id is required'
		RETURN
	END
--------------------------------------------- Validation End  -------------------------------------------------------
	BEGIN TRY
			Update dbo.tbl_remit_partners Set 				[IsDeleted] =1,		[UpdatedById] = @UpdatedById,		[UpdatedByName] = @UpdatedByName,		[UpdatedDate] = GETUTCDATE()			 Where [Id] = @Id	Set @IdentityVal = @Id 	Set @MsgText = 'Record Deleted Successfully !'
	Set @StatusCode = 200
	SET @MsgType = 'Sucess'
	END TRY
	BEGIN CATCH
		SET @ErrorNumber  = ERROR_NUMBER();
        SET @ErrorMessage  = ERROR_MESSAGE();
        SET @ErrorSeverity  = ERROR_SEVERITY();
        SET @ErrorState  = ERROR_STATE();
        SET @ErrorProcedure  = ERROR_PROCEDURE();
        SET @ErrorLine  = ERROR_LINE();

        EXEC [dbo].[usp_logdberror] @ErrorNumber, @ErrorMessage, @ErrorSeverity, @ErrorState, @ErrorProcedure, @ErrorLine;
		
		-- Re-throw the error to the calling application
        THROW;
	END CATCH
End 