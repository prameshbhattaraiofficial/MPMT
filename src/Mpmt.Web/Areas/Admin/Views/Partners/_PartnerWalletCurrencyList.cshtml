@using Mpmt.Core.Dtos.Partner
@using Mpmt.Core.Models.RMP;
@model WalletCurrency

@{
    var actors = ViewBag.actions as IEnumerable<ActionPermission> ?? new List<ActionPermission>();
}
@foreach (var item in Model.PartnerWalletCurrency)
{
    <li class="list-group-item align-items-center d-flex justify-content-between">
        <div class="media">
            <img class="currency-flag d-flex align-self-center me-3" src="@item.CurrencyImagePath" alt="" style="object-fit: contain; width: 56px; height: 42px; border-radius: 0px;">
            <div class="media-body align-self-center">
                <h4 class="mt-0 mb-1">@item.SourceCurrency</h4>
                <h6 class="mt-0 mb-1 f-20">@item.Balance</h6>
                <input type="hidden" name="PartnerCode" value="@ViewBag.PartnerCode" />

            </div><!--end media-body-->
        </div><!--end media-->
        <div class="align-self-center">
            <div class=" float-center">

                @if (!string.IsNullOrEmpty(item.SourceCurrency) && !item.SourceCurrency.Contains("NPR", StringComparison.OrdinalIgnoreCase))
                {
                    <a class="btn btn-sm btn-soft-success btn-circle me-2" onclick="ShowPopUp('@Url.Action("AddFundRequest","Partners", new { walletcurrencyid = item.Id, fundType = Model.apppartner.FundType})','Add Fund')"><i class="dripicons-plus"></i> Add Fund</a>
                    <a class="btn btn-sm btn-soft-warning btn-circle me-2 dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"> <i class="mdi mdi-dots-horizontal text-secondary font-16"></i></a>
                }
                else
                {
                    <a class="btn btn-sm btn-soft-warning btn-circle me-2 dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"> <i class="mdi mdi-dots-horizontal text-secondary font-16"></i></a>
                }

                <div class="dropdown-menu" style="overflow: visible;">
                    @if (!string.IsNullOrEmpty(item.SourceCurrency) && !item.SourceCurrency.Contains("NPR", StringComparison.OrdinalIgnoreCase))
                    {
                        @if (actors.FirstOrDefault(x => x.Action == "UpdatePartnerWalletCurrency")?.Permission ?? false)
                        {
                            <a class="dropdown-item" onclick="ShowPopUp('@Url.Action("UpdatePartnerWalletCurrency","Partners", new { Id = item.Id })','Update Wallet Currency')"><i class="mdi mdi-pencil align-self-center font-16 icon-dual me-1"></i> Edit</a>
                        }
                        @if (actors.FirstOrDefault(x => x.Action == "RemovePartnerWalletCurrency")?.Permission ?? false)
                        {
                            <a class="dropdown-item" onclick="PopUPAjaxDelete('@Url.Action("RemovePartnerWalletCurrency", "Partners", new { Id = item.Id })', 'Remove Wallet Currency')"><i class="mdi mdi-bank align-self-center font-16 icon-dual me-1"></i>Delete</a>
                        }
                        <a class="dropdown-item" href="@Url.Action("WalletStatement","Partners", new { walletCurrencyById = item.SourceCurrency,Partnercode=@ViewBag.PartnerCode })"><i class="mdi mdi-book align-self-center font-16 icon-dual me-1"></i>Statement</a>
                    }
                    else
                    {
                        <a class="dropdown-item" href="@Url.Action("WalletStatement","Partners", new { walletCurrencyById = item.SourceCurrency,Partnercode=@ViewBag.PartnerCode })"><i class="mdi mdi-book align-self-center font-16 icon-dual me-1"></i>Statement</a>
                        <a class="dropdown-item" onclick="ShowPopUp('@Url.Action("AdjustmentWallet","Partners", new { walletCurrencyId = item.SourceCurrency,partnerCode=@ViewBag.PartnerCode })','Adjustment','.modal-sm')"><i class="dripicons-plus"></i>Adjustment</a>
                    }
                </div>
            </div>
        </div>
    </li>
}
