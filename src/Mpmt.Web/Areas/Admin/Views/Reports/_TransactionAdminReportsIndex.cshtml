@using Mpmt.Core.Dtos.PartnerReport
@using Mpmt.Core.Dtos.Paging
@using Mpmt.Core.Dtos.Pagination
@using Mpmt.Core.Models.RMP;
@model PagedList<RemitTxnReport>
@{
    var actors = ViewBag.actions as IEnumerable<ActionPermission> ?? new List<ActionPermission>();
    var sn = 1;
    decimal Amount = 0.0m;
    decimal totalSendAmt = 0.0m;
    decimal totalRecAmt = 0.0m;
    var nooftxn = 0;
}

<div class="table-responsive tableFixHead">
    <table id="datatable-buttons156" class="table table-striped dataTable nowrap">
        <thead class="table-light">
            <tr>
                <th>SN</th>
                <th>Sender Txn Date</th>
                <th>Receiver Txn Date</th>
                <th>Payout Date</th>
                <th>Sender Details</th>
                <th>Receiver Details</th>
                <th>Transaction Id</th>
                <th>Agent Tracker Id</th>
                <th>Gateway Transaction Id</th>
                <th>Partner Tracker Id</th>
                <th>Partner Id</th>
                <th>Partner Full Name</th>
                <th>Source Currency</th>
                <th>Destination Currency</th>
                <th>Payment Type</th>
                <th>Amount</th>
                <th>Service Charge</th>
                <th>Send Amount</th>
                <th>Receive Amount</th>
                <th>Partner Service Charge</th>
                <th>Status</th>
                <th>Sender Status</th>
                <th>Receiver Status</th>
                <th>Remarks</th>
                <th>Cancelled User Type</th>
                <th>Cancelled By</th>
                <th>Cancelled Date</th>
                <th>Cancel</th>
                <th>Payout</th>
                <th>Check Status</th>
                <th>View</th>
                <th>Edit</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Items.Count() <= 0)
            {
                <tr></tr>
                <tr></tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td class="text-danger" style="font-size:16px;">
                        No Record Found
                    </td>
                </tr>
            }
            else
            {
                <link href="~/css/customfixedheader.css" rel="stylesheet" />
                @foreach (var item in Model.Items)
                {
                    <tr>
                        <td>@item.SN</td>
                        <td>@item.SenderTransactionDate</td>
                        <td>@item.ReceiverTransactionDate</td>
                        <td>@item.PayoutDate</td>
                        <td>
                            @if (actors.FirstOrDefault(x => x.Action == "SenderDetail")?.Permission ?? false)
                            {
                                <a class="btn btn-sm btn-soft-info btn-circle me-2" style="width:200px;" onclick="ShowPopUp('@Url.Action("SenderDetail", "Reports", new { TransactionId = item.TransactionId })', 'Sender Detail')">@item.SenderName</a>
                            }
                        </td>
                        <td>
                            @if (actors.FirstOrDefault(x => x.Action == "ReciverDetail")?.Permission ?? false)
                            {
                                <a class="btn btn-sm btn-soft-info btn-circle me-2" style="width:200px;" onclick="ShowPopUp('@Url.Action("ReciverDetail", "Reports", new { TransactionId = item.TransactionId })', 'Receiver Detail')">@item.ReceiverName</a>
                            }
                        </td>
                        <td>@item.TransactionId</td>
                        <td>@item.AgentTrackerId</td>
                        <td>@item.GatewayTxnId</td>
                        <td>@item.PartnerTrackerId</td>
                        <td>@item.PartnerId</td>
                        <td>@item.PartnerFullName</td>
                        <td>@item.SourceCurrency</td>
                        <td>@item.DestinationCurrency</td>
                        <td>@item.PaymentType</td>
                        <td>@item.Amount.ToString("N2")</td>
                        <td>@item.ServiceCharge.ToString("N2")</td>
                        <td>@item.SendAmount.ToString("N2")</td>
                        <td>@item.ReceiveAmount.ToString("N2")</td>
                        <td>@item.PartnerServiceCharge.ToString("N2")</td>
                        <td>
                            @if (actors.FirstOrDefault(x => x.Action == "TransactionStatus")?.Permission ?? false)
                            {
                                <a class="btn btn-sm btn-soft-info btn-circle me-2" onclick="ShowPopUp('@Url.Action("TransactionStatus", "Reports", new { TransactionId = item.TransactionId })', 'Transaction Status')">@item.Status</a>
                            }
                        </td>
                        <td>@item.SenderUserStatus</td>
                        <td>@item.ReceiverUserStatus</td>
                        <td>@item.Remarks</td>
                        <td>@item.CancelledUserType</td>
                        <td>@item.CancelledBy</td>
                        <td>@item.CancelledDate</td>
                        @*<button type="button" class="btn btn-sm btn-warning btn-circle me-2">
                Cancel
                </button>*@
                        @if (item.IsPayout == false)
                        {
                            <td name="buttons">
                                <button type="button" disabled onclick="PopUPAjaxDelete('@Url.Action("CancelTransaction", "Reports", new { TransactionId = item.TransactionId })', 'Cancel Transaction')" class="btn btn-sm btn-warning btn-circle me-2">
                                    Cancel Transaction
                                </button>
                            </td>
                        }
                        else
                        {
                            <td name="buttons">
                                <button type="button" onclick="PopUPAjaxDelete('@Url.Action("CancelTransaction", "Reports", new { TransactionId = item.TransactionId })', 'Cancel Transaction')" class="btn btn-sm btn-warning btn-circle me-2">
                                    Cancel Transaction
                                </button>
                            </td>
                        }
                        @if (item.IsPayout == true)
                        {
                            if (item.PaymentTypeCode.ToUpper() == "CASH")
                            {
                                <td name="buttons">
                                    <button type="button" disabled onclick="PopUPAjaxDelete('@Url.Action("PayoutTransaction", "Reports", new { TransactionId = item.TransactionId })', 'Admin Payout Transaction')" class="btn btn-sm btn-warning btn-circle me-2">
                                        Payout
                                    </button>
                                </td>
                            }
                            else
                            {
                                <td name="buttons">
                                    <button type="button" onclick="PopUPAjaxDelete('@Url.Action("PayoutTransaction", "Reports", new { TransactionId = item.TransactionId })', 'Admin Payout Transaction')" class="btn btn-sm btn-warning btn-circle me-2">
                                        Payout
                                    </button>
                                </td>
                            }
                            if (item.PaymentTypeCode.ToUpper() == "BANK")
                            {
                                <td name="buttons">
                                    <button type="button" disabled class="btn btn-sm btn-warning btn-circle me-2">
                                        Check Status
                                    </button>
                                </td>
                            }
                            else
                            {
                                <td name="buttons">
                                    <button type="button" onclick="PopUPAjaxDelete('@Url.Action("CheckStatusTransaction", "Reports", new { TransactionId = item.TransactionId })', 'Transaction Check Status')" class="btn btn-sm btn-warning btn-circle me-2">
                                        Check Status
                                    </button>
                                </td>
                            }
                        }
                        else
                        {
                            <td name="buttons">
                                <button type="button" disabled class="btn btn-sm btn-warning btn-circle me-2">
                                    Payout
                                </button>
                            </td>
                            if (item.PaymentTypeCode.ToUpper() == "BANK")
                            {
                                <td name="buttons">
                                    <button type="button" disabled class="btn btn-sm btn-warning btn-circle me-2">
                                        Check Status
                                    </button>
                                </td>
                            }
                            else
                            {
                                <td name="buttons">
                                    <button type="button" onclick="PopUPAjaxDelete('@Url.Action("CheckStatusTransaction", "Reports", new { TransactionId = item.TransactionId })', 'Transaction Check Status')" class="btn btn-sm btn-warning btn-circle me-2">
                                        Check Status
                                    </button>
                                </td>
                            }

                        }

                        @* <td><a class="btn btn-sm btn-soft-info btn-circle me-2" onclick="ShowPopUp('@Url.Action("PaymentDetail", "Reports", new { TransactionId = item.TransactionId })', 'Payment Detail')">View Detail</a></td> *@
                        <td>
                            @if (actors.FirstOrDefault(x => x.Action == "ViewDetail")?.Permission ?? false)
                            {
                                <a onclick="ShowPopUp('@Url.Action("ViewDetail","Reports",new {TransactionId = item.TransactionId})','Transaction Details','.modal-sm')" data-bs-toggle="modal" data-bs-target="#sender" title="View Detail" class="text-primary"><i class="dripicons-preview"></i></a>
                            }

                        </td>
                        <td>
                            @if (item.IsCancel == false || !string.IsNullOrWhiteSpace(item.GatewayTxnId))
                            {
                                <a title="Edit Detail" class="text-primary" style="pointer-events: none; cursor: not-allowed; opacity: 0.5;"><i class="dripicons-pencil"></i></a>
                            }
                            else
                            {
                                @if (item.PaymentTypeCode == "CASH" && item.ReceiverUserStatus != "Success" && item.ReceiverUserStatus != "Cancelled")
                                {
                                    <a onclick="ShowPopUp('@Url.Action("EditCashoutDetails","Reports",new {TransactionId = item.TransactionId})','Account Details','modal-lg')" data-bs-toggle="modal" title="Edit Detail" data-bs-target="#sender" class="text-primary"><i class="dripicons-pencil"></i></a>
                                }
                                else if (string.IsNullOrEmpty(item.AgentTransactionId))
                                {
                                    <a onclick="ShowPopUp('@Url.Action("ManageAccountDetail","Reports",new {TransactionId = item.TransactionId})','Account Details','modal-lg')" data-bs-toggle="modal" title="Edit Detail" data-bs-target="#sender" class="text-primary"><i class="dripicons-pencil"></i></a>
                                    // <button type="button" class="btn btn-sm btn-soft-success btn-circle me-2 tippy-btn" onclick="ShowPopUp('@Url.Action("ManageAccountDetail", "Reports", new { UserId = item.TransactionId })', 'Update Account Details','.modal-sm')" data-bs-toggle="modal" data-bs-target="#sender" title="Edit Details">
                                    //     <i class="dripicons-pencil"></i>
                                    // </button>
                                }
                            }
                        </td>
                    </tr>
                    sn = sn + 1;
                    nooftxn = nooftxn + 1;
                    totalSendAmt = totalSendAmt + Convert.ToDecimal(item.SendAmount.ToString() ?? "0.00");
                    totalRecAmt = totalRecAmt + Convert.ToDecimal(item.ReceiveAmount.ToString() ?? "0.00");
                    Amount = Amount + Convert.ToDecimal(item.Amount.ToString() ?? "0.00");
                }
            }
        </tbody>
        <thead class="table-light">
            <tr>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th>No of Transaction : @nooftxn</th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th>Total :</th>
                <th>@Amount </th>
                <th> </th>
                <th>@totalSendAmt</th>
                <th>@totalRecAmt</th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
    </table>
</div>
<script>
    $(function () {
        $('td').click(function () {
            $('tr').removeClass('active');
            $(this).parent().addClass('active');
        });
    });
</script>
<partial name="_PaginationFooter"
         model="new PaginationFooter(Model.PageNumber, Model.PageSize, Model.Items.Count(), Model.FilteredCount, Model.TotalCount, Model.TotalPages)" />