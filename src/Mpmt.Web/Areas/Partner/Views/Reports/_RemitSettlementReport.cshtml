@using Mpmt.Core.Dtos.PartnerReport
@using Mpmt.Core.Dtos.Paging
@using Mpmt.Core.Dtos.Pagination
@using Mpmt.Core.Models.RMP;
@model PagedList<RemitSettlementReport>
@{
    var actors = ViewBag.actions as IEnumerable<ActionPermission> ?? new List<ActionPermission>();
    var sn = 1;
    decimal netSendingAmt = 0.0m;
    decimal sendingAmount = 0.0m;
    decimal netrecAmount = 0.0m;
    decimal comAmount = 0.0m;
    var nooftxn = 0;
}
<div class="table-responsive">
    <table id="datatable-buttons156" class="table table-striped dataTable nowrap">
        <thead class="table-light">
            <tr>
                <th>SN</th>
                <th>Sender Txn Date</th>
                <th>Receiver Txn Date</th>
                <th>Sender Details</th>
                <th>Receiver Details</th>
                <th>Type</th>
                <th>Transcation Id</th>
                <th>Partner Tracker Id</th>
                <th>Agent Tracker Id</th>
                <th>Partner Id</th>
                <th>Partner Full Name</th>
                <th>Partner Country</th>
                <th>Source Currency</th>
                <th>Payout Type</th>
                <th>Send Amount</th>
                <th>Service Charge</th>
                @*<th>Net Send Amount</th>*@
                <th>Conversion Rate</th>
                <th>Net Receive Amt NPR</th>
                <th>Commission Amount</th>
                <th>Previous Balance</th>
                <th>Current Balance</th>
                <th>Status</th>
                @* <th>View</th> *@
            </tr>
        </thead>
        <tbody>
            @foreach (var value in Model.Items.Select((item, index) => new { item, index }))
            {
                <tr>
                    <td>@(value.index + 1)</td>
                    <td>@value.item.SenderTransactionDate</td>
                    <td>@value.item.ReceiverTransactionDate</td>
                    <td>

                        <a class="btn btn-sm btn-soft-info btn-circle me-2" style="width:200px;" onclick="ShowPopUp('@Url.Action("SenderDetail", "SendTransactions", new { TransactionId = value.item.TransactionId })', 'Sender Detail')">@value.item.SenderName</a>
                        
                    </td>
                    <td>

                        <a class="btn btn-sm btn-soft-info btn-circle me-2" style="width:200px;" onclick="ShowPopUp('@Url.Action("ReciverDetail", "SendTransactions", new { TransactionId = value.item.TransactionId })', 'Receiver Detail')">@value.item.ReceiverName</a>
                        
                    </td>
                    <td>@value.item.Type</td>
                    <td>@value.item.TransactionId</td>
                    <td>@value.item.PartnerTrackerId</td>
                    <td>@value.item.AgentTrackerId</td>
                    <td>@value.item.PartnerId</td>
                    <td>@value.item.PartnerFullName</td>
                    <td>@value.item.PartnerCountry</td>
                    <td>@value.item.SourceCurrency</td>
                    <td>@value.item.PayoutType</td>
                    <td>@value.item.SendingAmount.ToString("N2")</td>
                    <td>@value.item.ServiceCharge.ToString("N2")</td>
                    @*<td>@value.item.NetSendingAmount.ToString("N2")</td>*@
                    <td>@value.item.ConversionRate.ToString("N2")</td>
                    <td>@value.item.NetReceivingAmountNPR.ToString("N2")</td>
                    <td>@value.item.CommissionAmount.ToString("N2")</td>
                    <td>@value.item.PreviousBalance.ToString("N2")</td>
                    <td>@value.item.CurrentBalance.ToString("N2")</td>
                    <td>@value.item.Status</td>
                    @* <td>
                        
                             <a onclick="ShowPopUp('@Url.Action("ViewDetail","Reports",new {TransactionId = value.item.TransactionId})','Transaction Details','.modal-sm')" data-bs-toggle="modal" data-bs-target="#sender" class="text-primary"><i class="dripicons-preview"></i></a>
                        
                     </td> *@
                </tr>
                sn = sn + 1;
                nooftxn = nooftxn + 1;
                netSendingAmt = netSendingAmt + Convert.ToDecimal(value.item.NetSendingAmount.ToString() ?? "0.00");
                sendingAmount = sendingAmount + Convert.ToDecimal(value.item.SendingAmount.ToString() ?? "0.00");
                netrecAmount = netrecAmount + Convert.ToDecimal(value.item.NetReceivingAmountNPR.ToString() ?? "0.00");
                comAmount = comAmount + Convert.ToDecimal(value.item.CommissionAmount.ToString() ?? "0.00");
            }
        </tbody>
        <thead class="table table-striped dataTable nowrap">
            <tr>
                <th>Total (NPR):</th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th>No of transaction : @nooftxn</th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th>@sendingAmount</th>
                <th></th>
                 @*<th>@netSendingAmt</th>*@
                <th></th>
                <th>@netrecAmount</th>
                <th>@comAmount</th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
    </table>
</div>

<partial name="_PaginationFooter"
         model="new PaginationFooter(Model.PageNumber, Model.PageSize, Model.Items.Count(), Model.FilteredCount, Model.TotalCount, Model.TotalPages)" />